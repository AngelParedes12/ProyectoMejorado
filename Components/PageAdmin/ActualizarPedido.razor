@page "/admin/pedidos/editar/{id:int}"
@attribute [Authorize(Roles = "Admin,Tecnico")]
@using Microsoft.AspNetCore.Authorization
@using ProyectoMejorado.Data
@using ProyectoMejorado.Components.Models
@inject ApplicationDbContext context
@inject NavigationManager nav
@rendermode InteractiveServer

<PageTitle>Editar Pedido</PageTitle>

<div class="container">
    <div class="card shadow-lg p-4 rounded-4">
        <h3 class="text-center text-primary mb-4">
            📝 Actualizar Estado del Pedido
        </h3>

        @if (pedido == null)
        {
            <div class="alert alert-warning text-center">Cargando pedido...</div>
        }
        else
        {
            <EditForm Model="pedido" OnValidSubmit="ActualizarEstado">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" />

                <div class="row mb-3">
                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Cliente</label>
                        <InputText class="form-control" @bind-Value="pedido.NombreCompleto" disabled />
                    </div>
                    <div class="col-md-6">
                        <label class="form-label fw-semibold">Teléfono</label>
                        <InputText class="form-control" @bind-Value="pedido.Telefono" disabled />
                    </div>
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Productos</label>
                    <InputTextArea class="form-control" @bind-Value="pedido.Productos" rows="3" disabled />
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Dirección de Envío</label>
                    <InputText class="form-control" @bind-Value="pedido.DireccionEnvio" disabled />
                </div>

                <div class="mb-3">
                    <label class="form-label fw-semibold">Estado del Pedido</label>
                    <InputSelect class="form-select" @bind-Value="pedido.Estado">
                        <option value="Pendiente">Pendiente</option>
                        <option value="Procesado">Procesado</option>
                        <option value="Enviado">Enviado</option>
                        <option value="Entregado">Entregado</option>
                        <option value="Cancelado">Cancelado</option>
                    </InputSelect>
                </div>

                <button class="btn btn-success w-100">
                    <i class="bi bi-check-circle me-2"></i> Guardar Cambios
                </button>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter] public int id { get; set; }
    private OrdenCliente? pedido;

    protected override async Task OnInitializedAsync()
    {
        pedido = await context.OrdenesClientes.FindAsync(id);
    }

    private async Task ActualizarEstado()
    {
        if (pedido != null)
        {
            context.OrdenesClientes.Update(pedido);
            await context.SaveChangesAsync();
            nav.NavigateTo("/admin/pedidos");
        }
    }
}
