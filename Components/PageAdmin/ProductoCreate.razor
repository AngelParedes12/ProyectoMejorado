@page "/admin/productos/crear"
@using ProyectoMejorado.Components.Models
@using ProyectoMejorado.Components.Services
@inject ProductoService productoService
@inject NavigationManager navigationManager
@inject IWebHostEnvironment env
@rendermode InteractiveServer

<PageTitle>Registrar Producto</PageTitle>

<div class="container">
    <div class="card shadow-lg p-4 rounded-4 mx-auto" style="max-width: 700px;">
        <h3 class="text-primary mb-4 text-center">
            <i class="bi bi-box-seam me-2"></i> Registrar Producto
        </h3>

        <EditForm Model="producto" OnValidSubmit="GuardarProducto">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label fw-semibold">📦 Nombre del Producto</label>
                <InputText class="form-control shadow-sm" @bind-Value="producto.Nombre" />
                <ValidationMessage For="@(() => producto.Nombre)" />
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold">🏷️ Categoría</label>
                <InputSelect class="form-select shadow-sm" @bind-Value="producto.Categoria">
                    <option value="">Seleccione una categoría</option>
                    <option value="Accesorios">Accesorios</option>
                    <option value="Repuestos">Repuestos</option>
                    <option value="Tecnología">Tecnología</option>
                </InputSelect>
                <ValidationMessage For="@(() => producto.Categoria)" />
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold">📝 Descripción</label>
                <InputTextArea class="form-control shadow-sm" rows="3" @bind-Value="producto.Descripcion" />
                <ValidationMessage For="@(() => producto.Descripcion)" />
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label fw-semibold">💵 Precio (RD$)</label>
                    <InputNumber class="form-control shadow-sm" @bind-Value="producto.Precio" step="0.01" />
                    <ValidationMessage For="@(() => producto.Precio)" />
                </div>

                <div class="col-md-6 mb-3">
                    <label class="form-label fw-semibold">📦 Cantidad Disponible</label>
                    <InputNumber class="form-control shadow-sm" @bind-Value="producto.CantidadDisponible" />
                    <ValidationMessage For="@(() => producto.CantidadDisponible)" />
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label fw-semibold">🖼️ Imagen del Producto</label>
                <InputFile OnChange="CargarImagen" class="form-control shadow-sm" />
                @if (!string.IsNullOrEmpty(producto.ImagenUrl))
                {
                    <img src="@producto.ImagenUrl" class="img-thumbnail mt-3" style="max-height: 180px;" />
                }
            </div>

            <button class="btn btn-success w-100 rounded-pill shadow-sm mt-2">
                <i class="bi bi-check-circle-fill me-2"></i> Guardar Producto
            </button>
        </EditForm>
    </div>
</div>

@code {
    private Producto producto = new();

    private async Task GuardarProducto()
    {
        await productoService.AgregarProducto(producto);
        navigationManager.NavigateTo("/tienda");
    }

    private async Task CargarImagen(InputFileChangeEventArgs e)
    {
        var archivo = e.File;
        var extension = Path.GetExtension(archivo.Name);
        var nuevoNombre = $"{Guid.NewGuid()}{extension}";
        var rutaCarpeta = Path.Combine(env.WebRootPath, "img");

        Directory.CreateDirectory(rutaCarpeta);

        var rutaCompleta = Path.Combine(rutaCarpeta, nuevoNombre);
        using var stream = new FileStream(rutaCompleta, FileMode.Create);
        await archivo.OpenReadStream().CopyToAsync(stream);

        producto.ImagenUrl = $"/img/{nuevoNombre}";
    }
}
