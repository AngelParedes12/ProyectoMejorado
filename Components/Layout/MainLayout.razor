@inherits LayoutComponentBase
@inject ProyectoMejorado.Components.Services.CarritoService carritoService
@inject NavigationManager NavigationManager

<div class="layout">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="main-content">
        <!-- Top bar -->
        <div class="top-bar d-flex justify-content-between align-items-center px-4">
            <span class="fs-6 text-muted">
                <i class="bi bi-calendar-event me-1"></i> @DateTime.Now.ToString("dd/MM/yyyy")
            </span>
        </div>

        <!-- Page content -->
        <main class="page-body">
            <article class="content shadow-sm rounded-4 p-4">
                @Body
            </article>
        </main>

        <!-- Floating Cart -->
        <div class="cart-floating">
            <button class="btn btn-primary btn-cart position-relative" @onclick='() => NavigationManager.NavigateTo("/carrito")'>
                <i class="bi bi-cart3 fs-5"></i>
                @if (carritoService.ObtenerCantidadTotal() > 0)
                {
                    <span class="cart-badge">
                        @carritoService.ObtenerCantidadTotal()
                    </span>
                }
            </button>
        </div>
    </div>
</div>

<!-- Error UI -->
<div id="blazor-error-ui" data-nosnippet>
    Ha ocurrido un error.
    <a href="." class="reload">Recargar</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
        carritoService.OnChange += StateHasChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
        carritoService.OnChange -= StateHasChanged;
    }
}