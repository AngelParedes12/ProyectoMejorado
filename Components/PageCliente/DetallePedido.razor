@page "/mis-pedidos/{id:int}"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using ProyectoMejorado.Data
@using ProyectoMejorado.Components.Models
@inject ApplicationDbContext context
@inject NavigationManager nav
@rendermode InteractiveServer

<PageTitle>Detalle del Pedido</PageTitle>

<h3 class="text-primary mb-4 text-center">
    <i class="bi bi-box-seam me-2"></i> Detalle del Pedido
</h3>

@if (pedido == null)
{
    <div class="alert alert-warning text-center">❌ Pedido no encontrado.</div>
}
else
{
    <div class="card shadow-lg rounded-4 p-4 bg-white border-start border-4 border-primary">
        <h5 class="text-primary fw-bold mb-4">
            <i class="bi bi-receipt-cutoff me-2"></i> Pedido del @pedido.Fecha.ToString("dd/MM/yyyy")
        </h5>

        <div class="row mb-3">
            <div class="col-md-6">
                <p><i class="bi bi-person-fill me-2 text-secondary"></i><strong>Cliente:</strong> @pedido.NombreCompleto</p>
                <p><i class="bi bi-envelope-at-fill me-2 text-secondary"></i><strong>Email:</strong> @pedido.ClienteEmail</p>
                <p><i class="bi bi-telephone-fill me-2 text-secondary"></i><strong>Teléfono:</strong> @pedido.Telefono</p>
            </div>
            <div class="col-md-6">
                <p><i class="bi bi-geo-alt-fill me-2 text-secondary"></i><strong>Dirección:</strong> @pedido.DireccionEnvio</p>
                <p><i class="bi bi-bag-fill me-2 text-secondary"></i><strong>Productos:</strong> @pedido.Productos</p>
                <p>
                    <i class="bi bi-cash-stack me-2 text-secondary"></i><strong>Total:</strong>
                    <span class="text-success fw-bold">RD$ @pedido.Total</span>
                </p>
            </div>
        </div>

        <hr class="my-3" />

        <div class="mb-3">
            <span class="fw-bold">Estado del Pedido:</span>
            <span class="badge fs-6 px-3 py-2 @GetBadgeClass(pedido.Estado)">
                @pedido.Estado
            </span>
        </div>

        <p class="text-muted small">
            <i class="bi bi-clock-fill me-1"></i> Registrado a las @pedido.Fecha.ToShortTimeString()
        </p>

        <div class="mt-4 text-end">
            <button class="btn btn-outline-primary rounded-pill px-4" @onclick="Volver">
                <i class="bi bi-arrow-left-circle me-2"></i> Volver a Mis Pedidos
            </button>
        </div>
    </div>
}

@code {
    [Parameter] public int id { get; set; }
    private OrdenCliente? pedido;

    protected override async Task OnInitializedAsync()
    {
        pedido = await context.OrdenesClientes.FindAsync(id);
    }

    private void Volver()
    {
        nav.NavigateTo("/mis-pedidos");
    }

    private string GetBadgeClass(string estado) => estado switch
    {
        "Pendiente" => "bg-warning text-dark",
        "Procesado" => "bg-primary",
        "Enviado" => "bg-info text-dark",
        "Entregado" => "bg-success",
        "Cancelado" => "bg-danger",
        _ => "bg-secondary"
    };
}
